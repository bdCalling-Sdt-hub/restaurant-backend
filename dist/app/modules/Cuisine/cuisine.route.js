"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.CuisineRoutes = void 0;
const express_1 = __importDefault(require("express"));
const AuthMiddleware_1 = __importDefault(require("../../middlewares/AuthMiddleware"));
const user_constant_1 = require("../User/user.constant");
const validationMiddleware_1 = __importDefault(require("../../middlewares/validationMiddleware"));
const cuisine_controller_1 = __importDefault(require("./cuisine.controller"));
const upload_1 = __importDefault(require("../../helper/upload"));
const isAccess_1 = __importDefault(require("../../middlewares/isAccess"));
const cuisine_validation_1 = require("./cuisine.validation");
const router = express_1.default.Router();
router.post("/create-cuisine", (0, AuthMiddleware_1.default)(user_constant_1.UserRole.super_admin, user_constant_1.UserRole.administrator), (0, isAccess_1.default)("restaurant"), upload_1.default.single('file'), (0, validationMiddleware_1.default)(cuisine_validation_1.createCuisineValidationSchema), cuisine_controller_1.default.createCuisine);
router.get("/get-cuisines", (0, AuthMiddleware_1.default)(user_constant_1.UserRole.super_admin, user_constant_1.UserRole.user, user_constant_1.UserRole.administrator), cuisine_controller_1.default.getCuisines);
router.get("/get-cuisine-drop-down", (0, AuthMiddleware_1.default)(user_constant_1.UserRole.owner), cuisine_controller_1.default.getCuisineDropDown);
router.patch("/update-cuisine/:cuisineId", (0, AuthMiddleware_1.default)(user_constant_1.UserRole.super_admin, user_constant_1.UserRole.administrator), (0, isAccess_1.default)("restaurant"), upload_1.default.single('file'), (0, validationMiddleware_1.default)(cuisine_validation_1.updateCuisineValidationSchema), cuisine_controller_1.default.updateCuisine);
router.delete("/delete-cuisine/:cuisineId", (0, AuthMiddleware_1.default)(user_constant_1.UserRole.super_admin, user_constant_1.UserRole.administrator), (0, isAccess_1.default)("restaurant"), cuisine_controller_1.default.deleteCuisine);
exports.CuisineRoutes = router;
